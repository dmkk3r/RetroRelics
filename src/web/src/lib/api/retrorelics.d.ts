/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/relics/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["RetroRelicsFeaturesRelicsGetRelic"];
        put?: never;
        post?: never;
        delete: operations["RetroRelicsFeaturesRelicsDeleteRelic"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/relics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["RetroRelicsFeaturesRelicsGetRelics"];
        put: operations["RetroRelicsFeaturesRelicsPutRelic"];
        post: operations["RetroRelicsFeaturesRelicsPostRelic"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        RetroRelicsFeaturesRelicsDeleteRelicRequest: Record<string, never>;
        RetroRelicsFeaturesRelicsGetRelicRequest: Record<string, never>;
        RetroRelicsFeaturesRelicsGetRelicsResponse: {
            relics?: components["schemas"]["RetroRelicsPostgresEntitiesRelic"][];
        };
        RetroRelicsPostgresEntitiesRelic: {
            /** Format: guid */
            id?: string;
            name?: string;
            metadata?: components["schemas"]["RetroRelicsPostgresEntitiesRelicMetadata"][];
        };
        RetroRelicsPostgresEntitiesRelicMetadata: {
            /** Format: guid */
            id?: string;
            key?: string;
            value?: string;
            /** Format: guid */
            relicId?: string;
        };
        RetroRelicsFeaturesRelicsPostRelicRequest: {
            name?: string;
            description?: string;
            imageUrl?: string;
        };
        RetroRelicsFeaturesRelicsPutRelicRequest: {
            /** Format: int32 */
            id?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    RetroRelicsFeaturesRelicsGetRelic: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": unknown;
                    "application/json": unknown;
                };
            };
        };
    };
    RetroRelicsFeaturesRelicsDeleteRelic: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": unknown;
                    "application/json": unknown;
                };
            };
        };
    };
    RetroRelicsFeaturesRelicsGetRelics: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RetroRelicsFeaturesRelicsGetRelicsResponse"];
                };
            };
        };
    };
    RetroRelicsFeaturesRelicsPutRelic: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RetroRelicsFeaturesRelicsPutRelicRequest"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": unknown;
                    "application/json": unknown;
                };
            };
        };
    };
    RetroRelicsFeaturesRelicsPostRelic: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RetroRelicsFeaturesRelicsPostRelicRequest"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": unknown;
                    "application/json": unknown;
                };
            };
        };
    };
}
